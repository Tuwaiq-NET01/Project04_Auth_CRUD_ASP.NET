{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rhm30\\\\OneDrive\\\\Desktop\\\\Tuwiq\\\\ASP.NET\\\\PROJECTS\\\\pro04\\\\client\\\\src\\\\components\\\\CharNavbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\nimport { Router, Link, navigate } from '@reach/router';\nimport Storage from './Storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CharNavbar() {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  function logout() {\n    Storage.remove(\"token\");\n    navigate(\"/login\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Charnavbar\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"CNmenu-bars\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaBars, {\n            onClick: showSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: sidebar ? 'CNnav-menu active' : 'CNnav-menu',\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-menu-items CNnav-menu-items\",\n          onClick: showSidebar,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navbar-toggle CNnavbar-toggle\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"menu-bars\",\n              children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), SidebarData.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: item.cName,\n              children: (() => {\n                if (item.title == \"Log Out\") {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: logout,\n                    children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"CNspan\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 13\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(Link, {\n                    to: item.path,\n                    children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"CNspan\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 13\n                  }, this);\n                }\n              })()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CharNavbar, \"mZ7SSBV4HOS6G3DuZI2UdZN0ZTs=\");\n\n_c = CharNavbar;\nexport default CharNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharNavbar\");","map":{"version":3,"sources":["C:/Users/rhm30/OneDrive/Desktop/Tuwiq/ASP.NET/PROJECTS/pro04/client/src/components/CharNavbar.jsx"],"names":["React","useState","FaIcons","AiIcons","SidebarData","IconContext","Router","Link","navigate","Storage","CharNavbar","sidebar","setSidebar","showSidebar","logout","remove","color","map","item","index","cName","title","icon","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMY,WAAW,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAApC;;AACA,WAASG,MAAT,GAAkB;AAChBL,IAAAA,OAAO,CAACM,MAAR,CAAe,OAAf;AACAP,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,aAAvB;AAAA,iCACE,QAAC,OAAD,CAAS,MAAT;AAAgB,YAAA,OAAO,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAEF,OAAO,GAAG,mBAAH,GAAyB,YAAhD;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,iCAAd;AAAgD,UAAA,OAAO,EAAEE,WAAzD;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,+BAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAa,cAAA,SAAS,EAAC,WAAvB;AAAA,qCACE,QAAC,OAAD,CAAS,cAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGT,WAAW,CAACa,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,gCACE;AAAgB,cAAA,SAAS,EAAED,IAAI,CAACE,KAAhC;AAAA,wBAEf,CAAC,MAAM;AACA,oBAAIF,IAAI,CAACG,KAAL,IAAc,SAAlB,EAA6B;AAC3B,sCACE;AAAQ,oBAAA,OAAO,EAAIP,MAAnB;AAAA,+BACCI,IAAI,CAACI,IADN,eAEA;AAAM,sBAAA,SAAS,EAAE,QAAjB;AAAA,gCAA2BJ,IAAI,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,4BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAOD,iBARD,MAQO;AACL,sCACE,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAEH,IAAI,CAACK,IAAf;AAAA,+BACSL,IAAI,CAACI,IADd,eAEQ;AAAM,sBAAA,SAAS,EAAE,QAAjB;AAAA,gCAA2BJ,IAAI,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,4BAFR;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;AAMD;AACF,eAjBN;AAFe,eAASF,KAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAwBD,WAzBA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8CD;;GAtDQT,U;;KAAAA,U;AAwDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { Router, Link, navigate } from '@reach/router';\r\nimport Storage from './Storage';\r\n\r\nfunction CharNavbar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  function logout() {\r\n    Storage.remove(\"token\");\r\n    navigate(\"/login\");\r\n  }\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <div className='Charnavbar'>\r\n          <Link to='#' className='CNmenu-bars'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sidebar ? 'CNnav-menu active' : 'CNnav-menu'}>\r\n          <ul className='nav-menu-items CNnav-menu-items' onClick={showSidebar}>\r\n            <li className='navbar-toggle CNnavbar-toggle'>\r\n              <Link to='#' className='menu-bars'>\r\n                <AiIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n\r\n{(() => {\r\n        if (item.title == \"Log Out\") {\r\n          return (\r\n            <button onClick = {logout}>\r\n            {item.icon}\r\n            <span className =\"CNspan\">{item.title}</span>\r\n          </button>\r\n          )\r\n       \r\n        } else {\r\n          return (\r\n            <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span className =\"CNspan\">{item.title}</span>\r\n                  </Link>\r\n          )\r\n        }\r\n      })()}\r\n                 \r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharNavbar;"]},"metadata":{},"sourceType":"module"}